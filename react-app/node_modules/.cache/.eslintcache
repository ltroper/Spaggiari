[{"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/index.js":"1","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/App.js":"2","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/index.js":"3","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/session.js":"4","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/User.js":"5","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/UsersList.js":"6","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/NavBar.js":"7","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LoginForm.js":"8","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/SignUpForm.js":"9","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/ProtectedRoute.js":"10","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LogoutButton.js":"11","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/Portfolio.js/index.js":"12","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/portfolio.js":"13","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/index.js":"14","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/addCash.js":"15","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/user.js":"16","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/SearchBar.js":"17","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/CryptoPage.js":"18","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/BuyCrypto.js":"19","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/crypto.js":"20","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/transaction.js":"21","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/portfolio.js":"22","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/Watchlist.js":"23","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/watchlist.js":"24","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/AddCryptoToList.js":"25","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/modal.js":"26","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/Modal.js":"27","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/watchCrypto.js":"28","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/editWatchlistName.js":"29","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/CryptoGraph.js":"30","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/cryptoData.js":"31","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/PortfolioGraph.js":"32"},{"size":474,"mtime":1650065611441,"results":"33","hashOfConfig":"34"},{"size":1837,"mtime":1649973782123,"results":"35","hashOfConfig":"34"},{"size":974,"mtime":1650429263191,"results":"36","hashOfConfig":"34"},{"size":2218,"mtime":1649970866838,"results":"37","hashOfConfig":"34"},{"size":721,"mtime":1649784808566,"results":"38","hashOfConfig":"34"},{"size":685,"mtime":1649784808566,"results":"39","hashOfConfig":"34"},{"size":873,"mtime":1650303235106,"results":"40","hashOfConfig":"34"},{"size":2813,"mtime":1650343805763,"results":"41","hashOfConfig":"34"},{"size":3824,"mtime":1650386143038,"results":"42","hashOfConfig":"34"},{"size":359,"mtime":1649784808570,"results":"43","hashOfConfig":"34"},{"size":335,"mtime":1649784808569,"results":"44","hashOfConfig":"34"},{"size":340,"mtime":1649864686077,"results":"45","hashOfConfig":"34"},{"size":1360,"mtime":1650057753518,"results":"46","hashOfConfig":"34"},{"size":2545,"mtime":1650410056932,"results":"47","hashOfConfig":"34"},{"size":2185,"mtime":1650343072155,"results":"48","hashOfConfig":"34"},{"size":767,"mtime":1649879567687,"results":"49","hashOfConfig":"34"},{"size":1399,"mtime":1650397442855,"results":"50","hashOfConfig":"34"},{"size":1209,"mtime":1650430256647,"results":"51","hashOfConfig":"34"},{"size":9997,"mtime":1650344251800,"results":"52","hashOfConfig":"34"},{"size":947,"mtime":1650390119725,"results":"53","hashOfConfig":"34"},{"size":814,"mtime":1649977966422,"results":"54","hashOfConfig":"34"},{"size":2464,"mtime":1650313584572,"results":"55","hashOfConfig":"34"},{"size":6635,"mtime":1650398460968,"results":"56","hashOfConfig":"34"},{"size":2546,"mtime":1650340690172,"results":"57","hashOfConfig":"34"},{"size":3918,"mtime":1650398084422,"results":"58","hashOfConfig":"34"},{"size":862,"mtime":1650066085098,"results":"59","hashOfConfig":"34"},{"size":862,"mtime":1650066085098,"results":"60","hashOfConfig":"34"},{"size":1980,"mtime":1650385239269,"results":"61","hashOfConfig":"34"},{"size":2803,"mtime":1650383292050,"results":"62","hashOfConfig":"34"},{"size":3657,"mtime":1650430430338,"results":"63","hashOfConfig":"34"},{"size":917,"mtime":1650429811656,"results":"64","hashOfConfig":"34"},{"size":1608,"mtime":1650429248047,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"11ghoq1",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":3,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/index.js",[],["142","143"],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/App.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/index.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/session.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/User.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/UsersList.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/NavBar.js",["144"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport LogoutButton from './auth/LogoutButton';\nimport { useSelector } from \"react-redux\";\n\n\nimport \"./NavBar.css\"\nimport SearchBar from './SearchBar';\nimport logo from '../Logo.png'\n\n\nconst NavBar = () => {\n\n  const sessionUser = useSelector(state => state.session.user);\n\n\n  return (sessionUser &&\n    <nav className='nav-bar-container'>\n      <ul>\n        <div className='nav-bar-left'>\n          <li>\n            <NavLink to='/' exact={true} activeClassName='active'>\n              <img className='logo-navbar' src={logo} />\n            </NavLink>\n          </li>\n          <SearchBar />\n        </div>\n        <div className='nav-bar-rigth'>\n          <li className='logout-button'>\n            <LogoutButton />\n          </li>\n        </div>\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LoginForm.js",["145"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/session';\n\nimport './LoginForm.css'\n\nconst LoginForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const handleSubmitDemo = async (e) => {\n    e.preventDefault();\n    const demoEmail = \"demo@aa.io\"\n    const demoPassword = \"password\"\n    await dispatch(login(demoEmail, demoPassword)\n    )\n  };\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <div className='login-body'>\n      <div className='login-left'>\n        <img src='https://wealthofgeeks.com/wp-content/uploads/2021/08/1146589_BestFinancialPodcasts_Option1_080621.jpg' />\n      </div>\n      <div className='login-right'>\n        <h2 className='log-in-title'>Log in to Spaggiari</h2>\n        <form onSubmit={onLogin}>\n          <div>\n            {errors.map((error, ind) => (\n              <div key={ind}>{error}</div>\n            ))}\n          </div>\n          <div>\n            <label className='login-label' htmlFor='email'>Email</label>\n            <input\n              className='login-input-fields'\n              name='email'\n              type='text'\n              value={email}\n              onChange={updateEmail}\n            />\n          </div>\n          <div>\n            <label className='login-label' htmlFor='password'>Password</label>\n            <input\n              className='login-input-fields'\n              name='password'\n              type='password'\n              value={password}\n              onChange={updatePassword}\n            />\n            <button className='log-in-button' type='submit'>Log in</button>\n            <button className='log-in-button bright' onClick={handleSubmitDemo}>Demo</button>\n          </div>\n        </form>\n        <div className='create-new-account'>\n          <p className='not-in-spaggiari'>Not in Spaggiari?</p>\n          <NavLink\n            to=\"/sign-up\"\n            style={{\n              textDecoration: \"underline\",\n              color: \"black\",\n              fontWeight: \"600\",\n              textUnderlineOffset: \"0.2rem\"\n            }}>\n            Create an account</NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/SignUpForm.js",["146"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { signUp } from '../../store/session';\n\nconst SignUpForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onSignUp = async (e) => {\n    e.preventDefault();\n\n    //error validation\n    setErrors([])\n    const newErrors = [];\n\n    if (username.length < 4) {\n      newErrors.push(\"Username must be 4 characters or more!\");\n    }\n\n    if (email.length < 4) {\n      newErrors.push(\"Email must be 4 characters or more!\");\n    }\n\n    if (password !== repeatPassword) {\n      newErrors.push(\"Passwords do not match.\")\n    }\n\n    if (newErrors.length > 0) {\n      setErrors(newErrors)\n      return;\n    }\n\n    if (password === repeatPassword) {\n      const data = await dispatch(signUp(username, email, password));\n      if (data) {\n        setErrors(data)\n      }\n    }\n\n\n\n  };\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const updateRepeatPassword = (e) => {\n    setRepeatPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <div className='login-body'>\n      <div className='login-left'>\n        <img src=\"https://static.onecms.io/wp-content/uploads/sites/23/2020/12/15/best-financial-year-1219mon-1.jpg\" />\n      </div>\n      <div className='login-right'>\n        <form onSubmit={onSignUp}>\n          <div>\n            <label className='login-label'>User Name</label>\n            <input\n              className='login-input-fields'\n              type='text'\n              name='username'\n              onChange={updateUsername}\n              value={username}\n            ></input>\n          </div>\n          <div>\n            <label className='login-label'>Email</label>\n            <input\n              className='login-input-fields'\n              type='email'\n              name='email'\n              onChange={updateEmail}\n              value={email}\n            ></input>\n          </div>\n          <div>\n            <label className='login-label'>Password</label>\n            <input\n              className='login-input-fields'\n              type='password'\n              name='password'\n              onChange={updatePassword}\n              value={password}\n            ></input>\n          </div>\n          <div>\n            <label className='login-label'>Repeat Password</label>\n            <input\n              className='login-input-fields'\n              type='password'\n              name='repeat_password'\n              onChange={updateRepeatPassword}\n              value={repeatPassword}\n              required={true}\n            ></input>\n          </div>\n          <button className='log-in-button' type='submit'>Sign Up</button>\n        </form>\n        <div>\n          {errors.map((error, ind) => (\n            <div className='error' key={ind}>{error}</div>\n          ))}\n        </div>\n        <div className='create-new-account'>\n          <p className='not-in-spaggiari'>Already have an account?</p>\n          <NavLink\n            to=\"/login\"\n            style={{\n              textDecoration: \"underline\",\n              color: \"black\",\n              fontWeight: \"600\",\n              textUnderlineOffset: \"0.2rem\"\n            }}>\n            Log In</NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/ProtectedRoute.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LogoutButton.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/Portfolio.js/index.js",["147","148","149","150","151","152","153","154"],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/portfolio.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/index.js",["155","156"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nimport AddCash from \"./addCash\";\nimport CryptoPortfolio from \"./portfolio\";\nimport PortfolioGraph from \"./PortfolioGraph\";\nimport { getPortfolioThunk } from \"../../store/portfolio\";\n\nimport './portfolio.css'\n\n\nconst Portfolio = () => {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getPortfolioThunk(id));\n    }, [dispatch]);\n\n    const sessionUser = useSelector(state => state.session.user);\n    const cryptoArr = useSelector(state => state.portfolio);\n    const allCryptos = useSelector(state => state.crypto)\n\n\n    const id = sessionUser.id\n\n\n    let cryptoObj = {}\n    let cryptoObjPricePaid = {}\n\n\n    {\n        if (cryptoArr?.length > 0) {\n            cryptoArr.forEach(element => {\n                if (cryptoObj[element.crypto_id] == null) {\n                    cryptoObj[element.crypto_id] = element.quantity\n                    cryptoObjPricePaid[element.crypto_id] = element.total_price\n                }\n                else {\n                    cryptoObj[element.crypto_id] = parseFloat(cryptoObj[element.crypto_id]) + element.quantity\n                    cryptoObjPricePaid[element.crypto_id] = parseFloat(cryptoObjPricePaid[element.crypto_id]) + element.total_price\n                }\n            });\n        }\n    }\n\n    let totalCryptoMoney = 0\n    Object.entries(cryptoObj).map(([key, value]) => (\n        totalCryptoMoney += value * allCryptos[key]?.current_price\n    ))\n\n    let totalMoneyPaid = 0\n    Object.entries(cryptoObjPricePaid).map(([key, value]) => (\n        totalMoneyPaid += value\n    ))\n\n    let netProfit = totalCryptoMoney - totalMoneyPaid\n    let netPercentage = ((totalCryptoMoney / totalMoneyPaid) * 100) - 100\n\n\n\n    return (\n        <div className=\"body-portfolio\">\n            <div className=\"left-container-portfolio\">\n                <h1 className=\"total-money-invested\">${totalCryptoMoney.toFixed(2)}</h1>\n                <p className={\"net-percentage-\" + (netPercentage > 0 ? \"positive\" : \"negative\")}>\n                    ${netProfit.toFixed(2)}\n                    {\" \"}\n                    ({netPercentage.toFixed(2)}%)\n                </p>\n                <PortfolioGraph cryptoObj={cryptoObj}/>\n                <AddCash />\n            </div>\n            <div className=\"right-container-portfolio\">\n                <CryptoPortfolio cryptoObj={cryptoObj} cryptoObjPricePaid={cryptoObjPricePaid} />\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Portfolio\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/addCash.js",["157","158"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateUserThunk } from '../../store/user';\n\nimport './portfolio.css'\n\n\nconst AddCash = ({ }) => {\n\n    const dispatch = useDispatch()\n\n    const sessionUser = useSelector(state => state.session.user);\n    const userWithCash = useSelector(state => state.user[1]?.cash)\n\n    let cashBalance\n\n    if (userWithCash > 0) {\n        cashBalance = userWithCash\n    }\n    else {\n        cashBalance = sessionUser.cash\n    }\n\n    const [addCash, setAddCash] = useState(false)\n    const [deposit, setDeposit] = useState(0)\n\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        let user = {\n            id: sessionUser.id,\n            cash: deposit\n        };\n\n        dispatch(updateUserThunk(user))\n        setAddCash(false)\n        setDeposit(0)\n\n    }\n\n    return (\n        <div className='add-cash-container'>\n            <div className='add-cash-left-container'>\n                <h3>Cash Balance:</h3>\n                <h3 className='add-cash-total-cash'>${cashBalance?.toFixed(2)}</h3>\n            </div>\n            <div>\n            {!addCash &&\n                <button\n                    onClick={e => setAddCash(true)}\n                >Add Cash</button>}\n            {addCash &&\n                <form onSubmit={handleSubmit}>\n                    <label>Enter amount in USD\n                        <input\n                            type=\"number\"\n                            min=\"0\"\n                            max=\"10000\"\n                            value={deposit}\n                            onChange={e => setDeposit(e.target.value)}\n                            required\n                        />\n                    </label>\n                    <button\n                        type=\"submit\"\n                    >\n                        Submit\n                    </button>\n                    <button\n                        onClick={e => setAddCash(false)}\n                    >\n                        Cancel\n                    </button>\n\n                </form>\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default AddCash\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/user.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/SearchBar.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/CryptoPage.js",["159"],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/BuyCrypto.js",["160","161"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { addToPortfolioThunk } from \"../../store/portfolio\";\nimport { updateUserThunk } from \"../../store/user\";\nimport { addTransactionThunk } from \"../../store/transaction\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getPortfolioThunk } from \"../../store/portfolio\";\n\nimport './cryptoPage.css'\n\nconst BuyCrypto = ({ thisCrypto }) => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n\n    const [buying, setBuying] = useState(true)\n    const [dollars, setDollars] = useState(\"dollar\")\n    const [investment, setInvestment] = useState()\n\n    const sessionUser = useSelector(state => state.session.user);\n    const userWithCash = useSelector(state => state.user[1]?.cash)\n    const cryptoArr = useSelector(state => state.portfolio);\n\n    const id = sessionUser.id\n\n    let cashBalance\n\n    if (userWithCash > 0) {\n        cashBalance = userWithCash\n    }\n    else {\n        cashBalance = sessionUser.cash\n    }\n\n    async function handleBuySubmit(e) {\n        e.preventDefault();\n        let user = {\n            id: sessionUser.id,\n            cash: -investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            total_price: investment,\n            quantity: investment / thisCrypto.current_price\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            type: \"buy\",\n            price: investment,\n            quantity: investment / thisCrypto.current_price\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n\n    }\n\n    async function handleBuySubmitCrypto(e) {\n        e.preventDefault();\n        let user = {\n            id: sessionUser.id,\n            cash: -investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            total_price: investment * thisCrypto.current_price,\n            quantity: investment\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            type: \"buy\",\n            price: investment * thisCrypto.current_price,\n            quantity: investment\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n\n    }\n\n    async function handleSellSubmit(e) {\n        e.preventDefault();\n\n        let user = {\n            id: sessionUser?.id,\n            cash: investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            total_price: -investment,\n            quantity: -(investment / thisCrypto?.current_price)\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            type: \"sell\",\n            price: investment,\n            quantity: investment / thisCrypto?.current_price\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n    }\n\n    async function handleSellSubmitCrypto(e) {\n\n        e.preventDefault();\n        let user = {\n            id: sessionUser?.id,\n            cash: investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            total_price: -(investment * thisCrypto?.current_price),\n            quantity: -investment\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            type: \"sell\",\n            price: investment * thisCrypto?.current_price,\n            quantity: investment\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n    }\n\n\n    useEffect(() => {\n        dispatch(getPortfolioThunk(id));\n    }, [dispatch]);\n\n    let cryptoObj = {}\n\n\n    {\n        if (cryptoArr?.length > 0) {\n            cryptoArr.forEach(element => {\n                if (cryptoObj[element.crypto_id] == null) {\n                    cryptoObj[element.crypto_id] = element.quantity\n                }\n                else {\n                    cryptoObj[element.crypto_id] = parseFloat(cryptoObj[element.crypto_id]) + element.quantity\n                }\n            });\n        }\n    }\n\n    const toggleAsset = e => {\n        setDollars(e.target.value)\n        setInvestment()\n    }\n\n\n    return (\n        <div>\n            <div className=\"specific-crypto-header\">\n                <button onClick={e => setBuying(true)} className={\"buy-sell-button buy-sell-buttons-\" + (buying ? \"active\" : \"not\")}>Buy {thisCrypto?.symbol}</button>\n                <button onClick={e => setBuying(false)} className={\"buy-sell-button buy-sell-buttons-\" + (buying ? \"not\" : \"active\")}>Sell {thisCrypto?.symbol}</button>\n            </div>\n            <div>\n                <div className=\"invest-in-container\">\n                    <p>Invest in</p>\n                    <select\n                        className=\"buy-crypto-select-menu\"\n                        onChange={toggleAsset}>\n                        <option value=\"dollar\">Dollars</option>\n                        <option value=\"crypto\">Crypto</option>\n                    </select>\n                </div>\n                <div>\n                    {dollars === \"dollar\" &&\n                        <form onSubmit={buying ? handleBuySubmit : handleSellSubmit}>\n                            <div className=\"amount-container\">\n                                <label className=\"invest-in-container\">Amount\n                                    <input\n                                        className=\"buy-crypto-input-menu\"\n                                        type=\"number\"\n                                        step=\"0.01\"\n                                        min=\"0\"\n                                        max={buying ? cashBalance : cryptoObj[thisCrypto.id] * thisCrypto.current_price}\n                                        placeholder=\"$0.00\"\n                                        value={investment}\n                                        onChange={e => setInvestment(e.target.value)}\n                                        required\n                                    />\n                                </label>\n                                <div className=\"amount-container-border\"></div>\n                            </div>\n                            <label className=\"invest-in-container estimated-label\">Est. Quantity\n                                <div>\n                                    {investment > 0 ?\n                                        <p>\n                                            {(investment / thisCrypto?.current_price).toFixed(5)}{\" \"}{thisCrypto?.symbol}\n                                        </p>\n                                        : 0\n                                    }\n                                </div>\n                            </label>\n                            <div className=\"buy-crypto-button-container\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"buy-crypto-button\"\n                                >\n                                    Submit\n                                </button>\n                            </div>\n\n                        </form>\n                    }\n                    {dollars === \"crypto\" &&\n                        <form onSubmit={buying ? handleBuySubmitCrypto : handleSellSubmitCrypto}>\n                            <div className=\"amount-container\">\n                                <label className=\"invest-in-container\">Amount\n                                    <input\n                                        className=\"buy-crypto-input-menu\"\n                                        type=\"number\"\n                                        step=\"0.0001\"\n                                        min=\"0\"\n                                        max={buying ? (cashBalance / thisCrypto?.current_price) : cryptoObj[thisCrypto.id]}\n                                        value={investment}\n                                        onChange={e => setInvestment(e.target.value)}\n                                        required\n                                    />\n                                </label>\n                                <div className=\"amount-container-border\"></div>\n                            </div>\n                            <label className=\"invest-in-container estimated-label\">Est. Dollars\n                                <div>\n                                    {investment > 0 ?\n                                        <p>\n                                            ${(investment * thisCrypto?.current_price).toFixed(2)}\n                                        </p>\n                                        : 0\n                                    }\n                                </div>\n                            </label>\n                            <div className=\"buy-crypto-button-container\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"buy-crypto-button\"\n                                >\n                                    Submit\n                                </button>\n                            </div>\n\n                        </form>\n\n\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BuyCrypto\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/crypto.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/transaction.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/portfolio.js",["162","163"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport './portfolio.css'\nimport Watchlist from \"./Watchlist\";\n\nconst CryptoPortfolio = ({ cryptoObj, cryptoObjPricePaid }) => {\n\n    const allCryptos = useSelector(state => state.crypto)\n\n\n\n    return (\n        <div>\n            <div className=\"portfolio-crypto-header-container\">\n                <h4 className=\"portfolio-crypto-header\">Cryptos</h4>\n            </div>\n            <div className=\"portfolio-crypto-coins-container\">\n                {Object.entries(cryptoObj).map(([key, value]) => (\n                    <NavLink\n                        to={`/crypto/${key}`}\n                        exact={true}\n                        style={{ textDecoration: \"none\", color: \"antiquewhite\" }}>\n                        <div className=\"portfolio-individual-coin-container\">\n                            <div className=\"portfolio-individual-coin-left\">\n                                <div className=\"small-crypto-symbol-container\">\n                                    <p className=\"small-crypto-symbol\">{allCryptos[key]?.symbol.toUpperCase()}</p>\n                                    <img className=\"small-crypto-image\" src={allCryptos[key]?.image}/>\n                                </div>\n                                <p className=\"small-crypto-values\">{value.toFixed(5)}</p>\n                            </div>\n                            <div className=\"portfolio-individual-coin-right\">\n                                <p className=\"small-crypto-values\">${(value * allCryptos[key]?.current_price).toFixed(2)}</p>\n                                <p className={\"net-percentage-\" + (((((\n                                    value * allCryptos[key]?.current_price)\n                                    / cryptoObjPricePaid[key])\n                                    * 100) - 100) > 0 ? \"positive\" : \"negative\")}>\n                                    {((((\n                                        value * allCryptos[key]?.current_price)\n                                        / cryptoObjPricePaid[key])\n                                        * 100) - 100).toFixed(2)}%\n                                </p>\n                            </div>\n                        </div>\n                    </NavLink>\n                ))\n                }\n            </div>\n            <Watchlist />\n        </div>\n    )\n}\n\nexport default CryptoPortfolio\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/Watchlist.js",["164","165","166"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { getWatchCryptoThunk, deleteWatchCryptoThunk } from '../../store/watchCrypto'\nimport { newWatchlistThunk, getWatchlistThunk, deleteWatchlistThunk } from \"../../store/watchlist\";\nimport EditWatchlistName from \"./editWatchlistName\";\n\nimport './portfolio.css'\n\nconst Watchlist = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const sessionUser = useSelector(state => state.session.user);\n    const userWatchlists = useSelector(state => state.watchlist);\n    const watchCrypto = useSelector(state => state.watchCrypto);\n\n    const allCryptos = useSelector(state => state.crypto)\n\n\n    // The following is simply not state managed, we cannot watch lifecycle of this stuff.\n    // const watchlistArr = Object.entries(userWatchlists)\n    // const watchCryptoArr = Object.values(watchCrypto)\n    // let cryptoInWatchObj = {};\n    // watchCryptoArr.forEach(element => {\n    //     if (cryptoInWatchObj[element.watchlist_id]) {\n    //         let arr = cryptoInWatchObj[element.watchlist_id];\n    //         arr.push(element.crypto_id)\n    //         cryptoInWatchObj[element.watchlist_id] = arr;\n    //     } else {\n    //         cryptoInWatchObj[element.watchlist_id] = [element.crypto_id]\n    //     }\n    // });\n\n    const [watchlistName, setWatchlistName] = useState(\"\"); // set by onChange;\n    const [addList, setAddList] = useState(false); // set by onClick;\n    const [cryptoLists, setCryptoLists] = useState([]);\n\n    useEffect(() => {\n        dispatch(getWatchlistThunk(sessionUser.id));\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(getWatchCryptoThunk(sessionUser.id));\n    }, [dispatch]);\n\n    useEffect(() => {\n        setCryptoLists(Object.values(watchCrypto));\n    }, [dispatch, watchCrypto]);\n\n    function handleSubmit(e) {\n        let watchlist = {\n            user_id: sessionUser.id,\n            name: watchlistName\n        };\n        // async/await no necessary as we are not waiting response from API.\n        // await dispatch(newWatchlistThunk(watchlist))\n        dispatch(newWatchlistThunk(watchlist));\n        history.push(\"/\");\n    }\n\n    const toggleWatchlist = (id) => {\n        let dropdownNode = document.getElementById(`watchlist-${id}`);\n        dropdownNode.classList.toggle(\"hidden\");\n    };\n\n\n\n    return (\n        <div>\n            <div className=\"portfolio-crypto-header-container list-header\">\n                <h4 className=\"portfolio-crypto-header\">Lists</h4>\n                <i className=\"fa-regular fa-plus fa-2xl plus-sign\" onClick={e => setAddList(!addList)}></i>\n            </div>\n            <div>\n                {addList &&\n                    <div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"add-new-list-container\">\n                                <input\n                                    className=\"add-new-list-input\"\n                                    type=\"text\"\n                                    placeholder=\"List Name\"\n                                    value={watchlistName}\n                                    onChange={e => setWatchlistName(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"add-new-list-container\">\n                                <button\n                                    className=\"add-new-list-submit\"\n                                    type=\"submit\"\n                                >Submit\n                                </button>\n                                <button\n                                    onClick={e => setAddList(false)}\n                                >Cancel\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                }\n                <div className=\"portfolio-crypto-coins-container\">\n                    {Object.entries(userWatchlists)?.map(([id, name]) => (\n                        <div className=\"portfolio-individual-watchlist-container\">\n                            <div className=\"portfolio-individual-watchlist-left\">\n                                <p>{name}</p>\n                            </div>\n                            <div className=\"portfolio-individual-watchlist-right\">\n                                <div className=\"edit-delete-buttons-cont\">\n                                    <EditWatchlistName name={name} id={id} />\n                                    <button onClick={e => dispatch(deleteWatchlistThunk(id))} className=\"edit-delete-buttons\">Delete</button>\n                                </div>\n                                <span key={id} onClick={() => toggleWatchlist(id)} className=\"arrow-down\"></span>\n                            </div>\n                            <div id={`watchlist-${id}`} className={\"hidden\"}>\n                                {\n                                    cryptoLists?.filter((c) => c['watchlist_id'] === +id).map(filteredCrypt => (\n                                        <div className=\"watchlist-list\">\n                                            <div className=\"crypto-name-image\">\n                                                <NavLink to={`/crypto/${filteredCrypt.crypto_id}`}\n                                                    exact={true}\n                                                    style={{ textDecoration: \"none\", color: \"antiquewhite\" }}\n                                                >\n                                                    <div>{filteredCrypt.crypto_id.toUpperCase()}</div>\n                                                </NavLink>\n                                                    <img className=\"small-crypto-image\" src={allCryptos[filteredCrypt.crypto_id]?.image}></img>\n                                            </div>\n                                            <div className=\"remove-button-container\">\n                                                <button onClick={e => dispatch(deleteWatchCryptoThunk(filteredCrypt.id))} className=\"edit-delete-buttons\">Remove</button>\n                                            </div>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Watchlist\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/watchlist.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/AddCryptoToList.js",["167"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { Modal } from '../../context/Modal.js'\nimport { getWatchlistThunk, newWatchlistThunk } from '../../store/watchlist'\nimport { addWatchCryptoThunk, getWatchCryptoThunk } from '../../store/watchCrypto'\n\nfunction AddCryptoToList({ thisCrypto }) {\n\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n\n  const [showModal, setShowModal] = useState(false);\n  const [newList, setNewList] = useState(false)\n  const [watchlistName, setWatchlistName] = useState(\"\")\n\n\n  const sessionUser = useSelector(state => state.session.user);\n  const userWatchlists = useSelector(state => state.watchlist)\n  const watchlistArr = Object.entries(userWatchlists)\n\n  const watchCrypto = useSelector(state => state?.watchCrypto)\n  const watchCryptoArr = Object.values(watchCrypto)\n\n  let cryptoInWatchObj = {}\n\n\n\n\n  watchCryptoArr.forEach(element => {\n    if (cryptoInWatchObj[element.crypto_id]) {\n      let arr = cryptoInWatchObj[element.crypto_id];\n      arr.push(element.watchlist_id)\n      cryptoInWatchObj[element.crypto_id] = arr;\n    } else {\n      cryptoInWatchObj[element.crypto_id] = [element.watchlist_id]\n    }\n  })\n\n\n  const thisCryptoInWatchList = cryptoInWatchObj[thisCrypto?.id]\n\n  async function hanldeSubmit(e) {\n    let watchlist = {\n      user_id: sessionUser.id,\n      name: watchlistName\n    }\n\n    await dispatch(newWatchlistThunk(watchlist))\n    history.push(\"/\")\n  }\n\n  useEffect(() => {\n    dispatch(getWatchlistThunk(sessionUser.id));\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getWatchCryptoThunk(sessionUser.id))\n  }, [dispatch, sessionUser.id])\n\n\n\n  return (\n    <>\n      <div className='add-to-list-button-container'>\n        <button\n          className='add-to-list-button'\n          onClick={() => setShowModal(true)}>\n          Add To List</button>\n      </div>\n      {showModal && (\n        <Modal onClose={() => setShowModal(false)}>\n          <h4 className='add-watchlist-title'>Add {thisCrypto.name} to one of your watchlists</h4>\n          {\n            watchlistArr?.map(([watchlist_id, listName]) => (\n              !(thisCryptoInWatchList?.includes(+watchlist_id)) && (\n                <div className='individual-list-container'>\n                  <button className='individual-list-name'\n                    onClick={e => dispatch(addWatchCryptoThunk({ crypto_id: thisCrypto?.id, watchlist_id }))}>\n                    {listName}\n                  </button>\n                </div>)\n            ))\n          }\n          <h5 className='add-watchlist-title subtitle'>Don't see any lists?</h5>\n          <h5 className='add-watchlist-title subsub'>This asset may be in all of your lists already</h5>\n          <div className='add-list-from-modal-container'>\n            <button\n              className=\"buy-crypto-button add-watchlist-button\"\n              onClick={e => setNewList(true)}>\n              Create a new one</button>\n          </div>\n          {newList &&\n            <form onSubmit={hanldeSubmit}>\n              <div className=\"add-new-list-container\">\n                <input\n                  className=\"add-new-list-input\"\n                  type=\"text\"\n                  placeholder=\"List Name\"\n                  value={watchlistName}\n                  onChange={e => setWatchlistName(e.target.value)}\n                />\n              </div>\n              <div className=\"add-new-list-container\">\n                <button\n                  className=\"add-new-list-submit\"\n                  type=\"submit\"\n                >Submit\n                </button>\n                <button\n                  onClick={e => setNewList(false)}\n                >Cancel\n                </button>\n              </div>\n            </form>\n          }\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default AddCryptoToList;\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/modal.js",[],["168","169"],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/Modal.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/watchCrypto.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/editWatchlistName.js",["170","171"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { Modal } from '../../context/Modal.js'\nimport { getWatchlistThunk, editWatchlistThunk } from '../../store/watchlist'\n\nfunction EditWatchlistName({ name, id }) {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n\n    const [showModal, setShowModal] = useState(false);\n    const [watchlistName, setWatchlistName] = useState(name)\n    const [errors, setErrors] = useState([]);\n\n\n\n    const sessionUser = useSelector(state => state.session.user);\n\n\n\n    useEffect(() => {\n        dispatch(getWatchlistThunk(sessionUser.id));\n    }, [dispatch]);\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const watchlist = {\n            id,\n            name: watchlistName,\n            user_id: sessionUser.id\n        }\n\n        setErrors([]);\n\n        const newErrors = [];\n\n        if (watchlist.name.length < 4) {\n            newErrors.push(\"! Name must be 4 characters or more\");\n        }\n\n        if (newErrors.length > 0) {\n            setErrors(newErrors);\n            return;\n        }\n        dispatch(editWatchlistThunk(watchlist))\n        setShowModal(false)\n    }\n\n    return (\n        <>\n            <div >\n                <button\n                    className='edit-delete-buttons'\n                    onClick={() => setShowModal(true)}>\n                    Edit</button>\n            </div>\n            {showModal && (\n                <Modal onClose={() => setShowModal(false)}>\n                    <form onSubmit={handleSubmit} className=\"edit-name-form\">\n                        <input\n                            className='buy-crypto-input-menu edit-name-input'\n                            type='text'\n                            value={watchlistName}\n                            onChange={e => setWatchlistName(e.target.value)}\n                        />\n                        <button\n                            className='edit-name-button'\n                            type='submit'\n                        >Submit</button>\n                    </form>\n                    <button\n                        className='edit-name-button'\n                        onClick={() => setShowModal(false)}\n                    >Cancel</button>\n                    <div className=\"error-container\">\n                        <ul>\n                            {errors.map(err => (\n                                <li key={err} className=\"error\">\n                                    {err}\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </Modal>\n            )}\n        </>\n    );\n}\n\nexport default EditWatchlistName;\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/CryptoGraph.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/cryptoData.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/PortfolioGraph.js",["172","173","174","175","176","177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":23,"column":15,"nodeType":"185","endLine":23,"endColumn":57},{"ruleId":"183","severity":1,"message":"184","line":47,"column":9,"nodeType":"185","endLine":47,"endColumn":124},{"ruleId":"183","severity":1,"message":"184","line":73,"column":9,"nodeType":"185","endLine":73,"endColumn":120},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"190","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":17},{"ruleId":"186","severity":1,"message":"191","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":21},{"ruleId":"186","severity":1,"message":"192","line":3,"column":23,"nodeType":"188","messageId":"189","endLine":3,"endColumn":34},{"ruleId":"193","severity":2,"message":"194","line":9,"column":9,"nodeType":"188","messageId":"195","endLine":9,"endColumn":17},{"ruleId":"193","severity":2,"message":"196","line":9,"column":18,"nodeType":"188","messageId":"195","endLine":9,"endColumn":36},{"ruleId":"197","severity":1,"message":"198","line":10,"column":10,"nodeType":"199","endLine":10,"endColumn":20,"suggestions":"200"},{"ruleId":"193","severity":2,"message":"194","line":10,"column":11,"nodeType":"188","messageId":"195","endLine":10,"endColumn":19},{"ruleId":"197","severity":1,"message":"201","line":19,"column":8,"nodeType":"199","endLine":19,"endColumn":18,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":33,"column":5,"nodeType":"205","messageId":"206","endLine":46,"endColumn":6},{"ruleId":"186","severity":1,"message":"207","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"209","line":8,"column":18,"nodeType":"210","messageId":"211","endLine":8,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":23,"column":21,"nodeType":"185","endLine":23,"endColumn":81},{"ruleId":"197","severity":1,"message":"201","line":157,"column":8,"nodeType":"199","endLine":157,"endColumn":18,"suggestions":"212"},{"ruleId":"203","severity":1,"message":"204","line":162,"column":5,"nodeType":"205","messageId":"206","endLine":173,"endColumn":6},{"ruleId":"186","severity":1,"message":"191","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":34},{"ruleId":"183","severity":1,"message":"184","line":29,"column":37,"nodeType":"185","endLine":29,"endColumn":103},{"ruleId":"197","severity":1,"message":"213","line":42,"column":8,"nodeType":"199","endLine":42,"endColumn":18,"suggestions":"214"},{"ruleId":"197","severity":1,"message":"213","line":46,"column":8,"nodeType":"199","endLine":46,"endColumn":18,"suggestions":"215"},{"ruleId":"183","severity":1,"message":"184","line":127,"column":53,"nodeType":"185","endLine":127,"endColumn":138},{"ruleId":"197","severity":1,"message":"213","line":56,"column":6,"nodeType":"199","endLine":56,"endColumn":16,"suggestions":"216"},{"ruleId":"179","replacedBy":"217"},{"ruleId":"181","replacedBy":"218"},{"ruleId":"186","severity":1,"message":"219","line":9,"column":11,"nodeType":"188","messageId":"189","endLine":9,"endColumn":18},{"ruleId":"197","severity":1,"message":"213","line":25,"column":8,"nodeType":"199","endLine":25,"endColumn":18,"suggestions":"220"},{"ruleId":"186","severity":1,"message":"207","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"191","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":21},{"ruleId":"186","severity":1,"message":"192","line":2,"column":23,"nodeType":"188","messageId":"189","endLine":2,"endColumn":34},{"ruleId":"186","severity":1,"message":"221","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":13},{"ruleId":"186","severity":1,"message":"222","line":9,"column":12,"nodeType":"188","messageId":"189","endLine":9,"endColumn":27},{"ruleId":"186","severity":1,"message":"223","line":9,"column":29,"nodeType":"188","messageId":"189","endLine":9,"endColumn":47},{"ruleId":"186","severity":1,"message":"224","line":11,"column":11,"nodeType":"188","messageId":"189","endLine":11,"endColumn":36},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","no-undef","'dispatch' is not defined.","undef","'getAllCryptosThunk' is not defined.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'dispatch'. Either exclude it or remove the dependency array. Outer scope values like 'dispatch' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["227"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["228"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["229"],"React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.",["230"],["231"],["232"],["225"],["226"],"'history' is assigned a value but never used.",["233"],"'set' is defined but never used.","'cryptoDatePrice' is assigned a value but never used.","'setCryptoDatePrice' is assigned a value but never used.","'constructPortfolioHistory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"239","fix":"240"},{"desc":"239","fix":"241"},{"desc":"239","fix":"242"},{"desc":"239","fix":"243"},"Update the dependencies array to be: []",{"range":"244","text":"245"},"Update the dependencies array to be: [dispatch, id]",{"range":"246","text":"247"},{"range":"248","text":"247"},"Update the dependencies array to be: [dispatch, sessionUser.id]",{"range":"249","text":"250"},{"range":"251","text":"250"},{"range":"252","text":"250"},{"range":"253","text":"250"},[252,262],"[]",[443,453],"[dispatch, id]",[4315,4325],[1740,1750],"[dispatch, sessionUser.id]",[1838,1848],[1617,1627],[711,721]]