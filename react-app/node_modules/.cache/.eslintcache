[{"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/index.js":"1","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/App.js":"2","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/index.js":"3","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/session.js":"4","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/User.js":"5","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/UsersList.js":"6","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/NavBar.js":"7","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LoginForm.js":"8","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/SignUpForm.js":"9","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/ProtectedRoute.js":"10","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LogoutButton.js":"11","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/Portfolio.js/index.js":"12","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/portfolio.js":"13","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/index.js":"14","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/addCash.js":"15","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/user.js":"16","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/SearchBar.js":"17","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/CryptoPage.js":"18","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/BuyCrypto.js":"19","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/crypto.js":"20","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/transaction.js":"21","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/portfolio.js":"22","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/Watchlist.js":"23","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/watchlist.js":"24","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/AddCryptoToList.js":"25","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/modal.js":"26","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/Modal.js":"27"},{"size":474,"mtime":1650065611441,"results":"28","hashOfConfig":"29"},{"size":1837,"mtime":1649973782123,"results":"30","hashOfConfig":"29"},{"size":878,"mtime":1650058099608,"results":"31","hashOfConfig":"29"},{"size":2218,"mtime":1649970866838,"results":"32","hashOfConfig":"29"},{"size":721,"mtime":1649784808566,"results":"33","hashOfConfig":"29"},{"size":685,"mtime":1649784808566,"results":"34","hashOfConfig":"29"},{"size":653,"mtime":1649978006905,"results":"35","hashOfConfig":"29"},{"size":1521,"mtime":1649784808567,"results":"36","hashOfConfig":"29"},{"size":2473,"mtime":1649786867359,"results":"37","hashOfConfig":"29"},{"size":359,"mtime":1649784808570,"results":"38","hashOfConfig":"29"},{"size":335,"mtime":1649784808569,"results":"39","hashOfConfig":"29"},{"size":340,"mtime":1649864686077,"results":"40","hashOfConfig":"29"},{"size":1360,"mtime":1650057753518,"results":"41","hashOfConfig":"29"},{"size":2443,"mtime":1650059006556,"results":"42","hashOfConfig":"29"},{"size":1834,"mtime":1650038841591,"results":"43","hashOfConfig":"29"},{"size":767,"mtime":1649879567687,"results":"44","hashOfConfig":"29"},{"size":1242,"mtime":1649980630472,"results":"45","hashOfConfig":"29"},{"size":648,"mtime":1650066826153,"results":"46","hashOfConfig":"29"},{"size":8525,"mtime":1650045956257,"results":"47","hashOfConfig":"29"},{"size":948,"mtime":1649973641620,"results":"48","hashOfConfig":"29"},{"size":814,"mtime":1649977966422,"results":"49","hashOfConfig":"29"},{"size":2237,"mtime":1650064074033,"results":"50","hashOfConfig":"29"},{"size":2794,"mtime":1650063409729,"results":"51","hashOfConfig":"29"},{"size":1369,"mtime":1650060106809,"results":"52","hashOfConfig":"29"},{"size":1086,"mtime":1650066833556,"results":"53","hashOfConfig":"29"},{"size":862,"mtime":1650066085098,"results":"54","hashOfConfig":"29"},{"size":862,"mtime":1650066085098,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ghoq1",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":3,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/index.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/App.js",[],["117","118"],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/index.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/session.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/User.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/UsersList.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/NavBar.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LoginForm.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/SignUpForm.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/ProtectedRoute.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/auth/LogoutButton.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/Portfolio.js/index.js",["119","120","121","122","123","124","125","126"],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/portfolio.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/index.js",["127","128"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nimport AddCash from \"./addCash\";\nimport CryptoPortfolio from \"./portfolio\";\nimport { getPortfolioThunk } from \"../../store/portfolio\";\n\nimport './portfolio.css'\n\n\nconst Portfolio = () => {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getPortfolioThunk(id));\n    }, [dispatch]);\n\n    const sessionUser = useSelector(state => state.session.user);\n    const cryptoArr = useSelector(state => state.portfolio);\n    const allCryptos = useSelector(state => state.crypto)\n\n\n    const id = sessionUser.id\n\n\n    let cryptoObj = {}\n    let cryptoObjPricePaid = {}\n\n\n    {\n        if (cryptoArr?.length > 0) {\n            cryptoArr.forEach(element => {\n                if (cryptoObj[element.crypto_id] == null) {\n                    cryptoObj[element.crypto_id] = element.quantity\n                    cryptoObjPricePaid[element.crypto_id] = element.total_price\n                }\n                else {\n                    cryptoObj[element.crypto_id] = parseFloat(cryptoObj[element.crypto_id]) + element.quantity\n                    cryptoObjPricePaid[element.crypto_id] = parseFloat(cryptoObjPricePaid[element.crypto_id]) + element.total_price\n                }\n            });\n        }\n    }\n\n    let totalCryptoMoney = 0\n    Object.entries(cryptoObj).map(([key, value]) => (\n        totalCryptoMoney += value * allCryptos[key]?.current_price\n    ))\n\n    let totalMoneyPaid = 0\n    Object.entries(cryptoObjPricePaid).map(([key, value]) => (\n        totalMoneyPaid += value\n    ))\n\n    let netProfit = totalCryptoMoney - totalMoneyPaid\n    let netPercentage = ((totalCryptoMoney / totalMoneyPaid) * 100) - 100\n\n\n\n\n    return (\n        <div className=\"body-portfolio\">\n            <div className=\"left-container-portfolio\">\n                <h1 className=\"total-money-invested\">${totalCryptoMoney.toFixed(2)}</h1>\n                <p className={\"net-percentage-\" + (netPercentage > 0 ? \"positive\" : \"negative\")}>\n                    ${netProfit.toFixed(2)}\n                    {\" \"}\n                    ({netPercentage.toFixed(2)}%)\n                </p>\n                <AddCash />\n            </div>\n            <div className=\"right-container-portfolio\">\n                <CryptoPortfolio cryptoObj={cryptoObj} cryptoObjPricePaid={cryptoObjPricePaid} />\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default Portfolio\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/addCash.js",["129","130"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateUserThunk } from '../../store/user';\n\nimport './portfolio.css'\n\n\nconst AddCash = ({}) => {\n\n    const dispatch = useDispatch()\n\n    const sessionUser = useSelector(state => state.session.user);\n    const userWithCash = useSelector(state => state.user[1]?.cash)\n\n    let cashBalance\n\n    if (userWithCash > 0) {\n        cashBalance = userWithCash\n    }\n    else {\n        cashBalance = sessionUser.cash\n    }\n\n    const [addCash, setAddCash] = useState(false)\n    const [deposit, setDeposit] = useState(0)\n\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        let user = {\n            id: sessionUser.id,\n            cash: deposit\n        };\n\n        dispatch(updateUserThunk(user))\n        setAddCash(false)\n        setDeposit(0)\n\n    }\n\n    return (\n        <div>\n            <h3>Cash Balance:</h3>\n            <h3>${cashBalance.toFixed(2)}</h3>\n            {!addCash &&\n                <button\n                    onClick={e => setAddCash(true)}\n                >Add Cash</button>}\n            {addCash &&\n                <form onSubmit={handleSubmit}>\n                    <label>Enter amount in USD\n                        <input\n                            type=\"number\"\n                            min=\"0\"\n                            max=\"10000\"\n                            value={deposit}\n                            onChange={e => setDeposit(e.target.value)}\n                            required\n                        />\n                    </label>\n                    <button\n                        type=\"submit\"\n                    >\n                        Submit\n                    </button>\n\n                </form>\n            }\n        </div>\n    )\n}\n\nexport default AddCash\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/user.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/SearchBar.js",["131"],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\n\nconst getFilteredSearch = (search, cryptoArray) => {\n    if (!search) {\n        return\n    }\n    const matchingArray = cryptoArray.filter(crypto => crypto.name.toUpperCase().includes(search.toUpperCase()))\n    return matchingArray\n}\n\n\nconst SearchBar = () => {\n\n    const sessionUser = useSelector(state => state.session.user);\n\n    const cryptoObj = useSelector(state => state.crypto)\n    const cryptoArray = Object.values(cryptoObj)\n\n\n    const [search, setSearch] = useState('')\n\n    const filteredSearch = getFilteredSearch(search, cryptoArray)\n\n    return (\n        <div>\n            <input\n                type='text'\n                placeholder='Search Cryptos'\n                value={search}\n                onChange={e => setSearch(e.target.value)}\n            />\n            <div>\n                {filteredSearch?.map(crypto => (\n                    <NavLink to={`/crypto/${crypto.id}`} onClick={e => setSearch(\"\")}>\n                        <div key={crypto.id}>{crypto.name}</div>\n                    </NavLink>\n                ))}\n            </div>\n        </div>\n    )\n\n}\n\nexport default SearchBar\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/CryptoPage.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/BuyCrypto.js",["132","133"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { addToPortfolioThunk } from \"../../store/portfolio\";\nimport { updateUserThunk } from \"../../store/user\";\nimport { addTransactionThunk } from \"../../store/transaction\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getPortfolioThunk } from \"../../store/portfolio\";\n\nimport './cryptoPage.css'\n\nconst BuyCrypto = ({ thisCrypto }) => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n\n    const [buying, setBuying] = useState(true)\n    const [dollars, setDollars] = useState(\"dollar\")\n    const [investment, setInvestment] = useState()\n\n    const sessionUser = useSelector(state => state.session.user);\n    const userWithCash = useSelector(state => state.user[1]?.cash)\n    const cryptoArr = useSelector(state => state.portfolio);\n\n    const id = sessionUser.id\n\n    let cashBalance\n\n    if (userWithCash > 0) {\n        cashBalance = userWithCash\n    }\n    else {\n        cashBalance = sessionUser.cash\n    }\n\n    async function handleBuySubmit(e){\n        e.preventDefault();\n        let user = {\n            id: sessionUser.id,\n            cash: -investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            total_price: investment,\n            quantity: investment / thisCrypto.current_price\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            type: \"buy\",\n            price: investment,\n            quantity: investment / thisCrypto.current_price\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n\n    }\n\n    async function handleBuySubmitCrypto(e){\n        e.preventDefault();\n        let user = {\n            id: sessionUser.id,\n            cash: -investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            total_price: investment * thisCrypto.current_price,\n            quantity: investment\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto.id,\n            user_id: sessionUser.id,\n            type: \"buy\",\n            price: investment * thisCrypto.current_price,\n            quantity: investment\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n\n    }\n\n    async function handleSellSubmit(e){\n        e.preventDefault();\n\n        let user = {\n            id: sessionUser?.id,\n            cash: investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            total_price: -investment,\n            quantity: -(investment / thisCrypto?.current_price)\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            type: \"sell\",\n            price: investment,\n            quantity: investment / thisCrypto?.current_price\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n    }\n\n    async function handleSellSubmitCrypto(e){\n\n        e.preventDefault();\n        let user = {\n            id: sessionUser?.id,\n            cash: investment\n        };\n\n        let portfolio = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            total_price: -(investment * thisCrypto?.current_price),\n            quantity: -investment\n        }\n\n        let transaction = {\n            crypto_id: thisCrypto?.id,\n            user_id: sessionUser?.id,\n            type: \"sell\",\n            price: investment * thisCrypto?.current_price,\n            quantity: investment\n        }\n\n        dispatch(updateUserThunk(user))\n        await dispatch(addToPortfolioThunk(portfolio))\n        await dispatch(addTransactionThunk(transaction))\n        history.push(\"/\")\n    }\n\n\n    useEffect(() => {\n        dispatch(getPortfolioThunk(id));\n    }, [dispatch]);\n\n    let cryptoObj = {}\n\n\n    {\n        if (cryptoArr?.length > 0) {\n            cryptoArr.forEach(element => {\n                if (cryptoObj[element.crypto_id] == null) {\n                    cryptoObj[element.crypto_id] = element.quantity\n                }\n                else {\n                    cryptoObj[element.crypto_id] = parseFloat(cryptoObj[element.crypto_id]) + element.quantity\n                }\n            });\n        }\n    }\n\n\n    return (\n        <div>\n            <button onClick={e => setBuying(true)} className={\"buy-sell-buttons-\"+(buying ? \"active\" : \"not\")}>Buy {thisCrypto?.symbol}</button>\n            <button onClick={e => setBuying(false)} className={\"buy-sell-buttons-\"+(buying ? \"not\" : \"active\")}>Sell {thisCrypto?.symbol}</button>\n                <div>\n                    <select onChange={e => setDollars(e.target.value)}>\n                        Invest in\n                        <option value=\"dollar\">Dollars</option>\n                        <option value=\"crypto\">Crypto</option>\n                    </select>\n                    <div>\n                        {dollars === \"dollar\" &&\n                            <form onSubmit={buying ? handleBuySubmit : handleSellSubmit}>\n                                <label>Amount\n                                    <input\n                                        type=\"number\"\n                                        min=\"0\"\n                                        max={buying ? cashBalance : cryptoObj[thisCrypto.id] * thisCrypto.current_price}\n                                        placeholder=\"$0.00\"\n                                        value={investment}\n                                        onChange={e => setInvestment(e.target.value)}\n                                        required\n                                    />\n                                </label>\n                                <label>Est. Quantity\n                                    <div>\n                                        {investment > 0 &&\n                                            <p>\n                                                {investment / thisCrypto?.current_price}{\" \"}{thisCrypto?.symbol}\n                                            </p>\n                                        }\n                                    </div>\n                                </label>\n                                <button\n                                    type=\"submit\"\n                                >\n                                    Submit\n                                </button>\n\n                            </form>\n                        }\n                        {dollars === \"crypto\" &&\n                            <form onSubmit={buying ? handleBuySubmitCrypto : handleSellSubmitCrypto}>\n                                <label>Amount\n                                    <input\n                                        type=\"number\"\n                                        min=\"0\"\n                                        max={buying ? (cashBalance / thisCrypto?.current_price) : cryptoObj[thisCrypto.id]}\n                                        value={investment}\n                                        onChange={e => setInvestment(e.target.value)}\n                                        required\n                                    />\n                                </label>\n                                <label>Est. Dollars\n                                    <div>\n                                        {investment > 0 &&\n                                            <p>\n                                                ${investment * thisCrypto?.current_price}\n                                            </p>\n                                        }\n                                    </div>\n                                </label>\n                                <button\n                                    type=\"submit\"\n                                >\n                                    Submit\n                                </button>\n\n                            </form>\n\n\n                        }\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default BuyCrypto\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/crypto.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/transaction.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/portfolio.js",["134"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport './portfolio.css'\nimport Watchlist from \"./Watchlist\";\n\nconst CryptoPortfolio = ({ cryptoObj, cryptoObjPricePaid }) => {\n\n    const allCryptos = useSelector(state => state.crypto)\n\n\n\n    return (\n        <div>\n            <div className=\"portfolio-crypto-header-container\">\n                <h4 className=\"portfolio-crypto-header\">Cryptos</h4>\n            </div>\n            <div className=\"portfolio-crypto-coins-container\">\n                {Object.entries(cryptoObj).map(([key, value]) => (\n                    <NavLink\n                        to={`/crypto/${key}`}\n                        exact={true}\n                        style={{ textDecoration: \"none\", color: \"antiquewhite\"}}>\n                        <div className=\"portfolio-individual-coin-container\">\n                            <div className=\"portfolio-individual-coin-left\">\n                                <p className=\"small-crypto-symbol\">{allCryptos[key]?.symbol.toUpperCase()}</p>\n                                <p className=\"small-crypto-values\">{value.toFixed(5)}</p>\n                            </div>\n                            <div className=\"portfolio-individual-coin-right\">\n                                <p className=\"small-crypto-values\">${(value * allCryptos[key]?.current_price).toFixed(2)}</p>\n                                <p className={\"net-percentage-\" + (((((\n                                    value * allCryptos[key]?.current_price)\n                                    / cryptoObjPricePaid[key])\n                                    * 100) - 100) > 0 ? \"positive\" : \"negative\")}>\n                                    {((((\n                                        value * allCryptos[key]?.current_price)\n                                        / cryptoObjPricePaid[key])\n                                        * 100) - 100).toFixed(2)}%\n                                </p>\n                            </div>\n                        </div>\n                    </NavLink>\n                ))\n                }\n            </div>\n            <Watchlist />\n        </div>\n    )\n}\n\nexport default CryptoPortfolio\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Portfolio/Watchlist.js",["135"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { newWatchlistThunk, getWatchlistThunk } from \"../../store/watchlist\";\n\nimport './portfolio.css'\n\nconst Watchlist = () => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n\n    const sessionUser = useSelector(state => state.session.user);\n    const userWatchlists = useSelector(state => state.watchlist)\n    const watchlistArr = Object.values(userWatchlists)\n\n    const [addList, setAddList] = useState(false)\n    const [watchlistName, setWatchlistName] = useState(\"\")\n\n    async function hanldeSubmit(e) {\n        let watchlist = {\n            user_id: sessionUser.id,\n            name: watchlistName\n        }\n\n        await dispatch(newWatchlistThunk(watchlist))\n        history.push(\"/\")\n    }\n\n    useEffect(() => {\n        dispatch(getWatchlistThunk(sessionUser.id));\n    }, [dispatch]);\n\n    return (\n        <div>\n            <div className=\"portfolio-crypto-header-container list-header\">\n                <h4 className=\"portfolio-crypto-header\">Lists</h4>\n                <i className=\"fa-regular fa-plus fa-2xl plus-sign\" onClick={e => setAddList(!addList)}></i>\n            </div>\n            <div>\n                {addList &&\n                    <div>\n                        <form onSubmit={hanldeSubmit}>\n                            <input\n                                type=\"text\"\n                                placeholder=\"List Name\"\n                                value={watchlistName}\n                                onChange={e => setWatchlistName(e.target.value)}\n                            />\n                            <button\n                                type=\"submit\"\n                            >Submit</button>\n                        </form>\n                        <button onClick={e => setAddList(false)}>Cancel</button>\n                    </div>\n                }\n                <div className=\"portfolio-crypto-coins-container\">\n                    {\n                        watchlistArr.map(name => (\n                            <div className=\"portfolio-individual-watchlist-container\">\n                                <div className=\"portfolio-individual-watchlist-left\">\n                                    <p>{name}</p>\n                                </div>\n                                <div className=\"portfolio-individual-watchlist-right\">\n                                    <i className=\"fa-solid fa-arrow-down-to-bracket arrow-sign\"></i>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Watchlist\n","/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/store/watchlist.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/components/Crypto/AddCryptoToList.js",["136"],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/modal.js",[],"/Users/homefolder/Desktop/app-academy/Spaggiari/react-app/src/context/Modal.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":17},{"ruleId":"141","severity":1,"message":"146","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":21},{"ruleId":"141","severity":1,"message":"147","line":3,"column":23,"nodeType":"143","messageId":"144","endLine":3,"endColumn":34},{"ruleId":"148","severity":2,"message":"149","line":9,"column":9,"nodeType":"143","messageId":"150","endLine":9,"endColumn":17},{"ruleId":"148","severity":2,"message":"151","line":9,"column":18,"nodeType":"143","messageId":"150","endLine":9,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":10,"column":10,"nodeType":"154","endLine":10,"endColumn":20,"suggestions":"155"},{"ruleId":"148","severity":2,"message":"149","line":10,"column":11,"nodeType":"143","messageId":"150","endLine":10,"endColumn":19},{"ruleId":"152","severity":1,"message":"156","line":18,"column":8,"nodeType":"154","endLine":18,"endColumn":18,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":32,"column":5,"nodeType":"160","messageId":"161","endLine":45,"endColumn":6},{"ruleId":"141","severity":1,"message":"162","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":8,"column":18,"nodeType":"165","messageId":"166","endLine":8,"endColumn":20},{"ruleId":"141","severity":1,"message":"167","line":17,"column":11,"nodeType":"143","messageId":"144","endLine":17,"endColumn":22},{"ruleId":"152","severity":1,"message":"156","line":157,"column":8,"nodeType":"154","endLine":157,"endColumn":18,"suggestions":"168"},{"ruleId":"158","severity":1,"message":"159","line":162,"column":5,"nodeType":"160","messageId":"161","endLine":173,"endColumn":6},{"ruleId":"141","severity":1,"message":"146","line":2,"column":23,"nodeType":"143","messageId":"144","endLine":2,"endColumn":34},{"ruleId":"152","severity":1,"message":"169","line":34,"column":8,"nodeType":"154","endLine":34,"endColumn":18,"suggestions":"170"},{"ruleId":"152","severity":1,"message":"169","line":20,"column":8,"nodeType":"154","endLine":20,"endColumn":18,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","no-undef","'dispatch' is not defined.","undef","'getAllCryptosThunk' is not defined.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'dispatch'. Either exclude it or remove the dependency array. Outer scope values like 'dispatch' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["175"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'sessionUser' is assigned a value but never used.",["176"],"React Hook useEffect has a missing dependency: 'sessionUser.id'. Either include it or remove the dependency array.",["177"],["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"181","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},"Update the dependencies array to be: []",{"range":"187","text":"188"},"Update the dependencies array to be: [dispatch, id]",{"range":"189","text":"190"},{"range":"191","text":"190"},"Update the dependencies array to be: [dispatch, sessionUser.id]",{"range":"192","text":"193"},{"range":"194","text":"193"},[252,262],"[]",[396,406],"[dispatch, id]",[4311,4321],[966,976],"[dispatch, sessionUser.id]",[607,617]]